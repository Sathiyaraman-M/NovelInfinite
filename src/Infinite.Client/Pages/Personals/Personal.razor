@page "/Personal"
@using Infinite.Shared.Entities
@using Markdig
<PageContent PageTitle="Personal Info">
    <ChildContent>
        <div class="d-flex justify-content-between my-2">
            <h1>Your Portfolio</h1>
            <div class="d-flex">
                <Button BackgroundColor="TablerColor.White"
                        OnClick="@(() => NavigationManager.NavigateTo("/Personal/Portfolio"))">
                    <Icon IconType="TablerIcons.Pencil" class="me-1"/>
                    Edit
                </Button>
                <Button BackgroundColor="TablerColor.White" class="ms-2"
                        OnClick="@(() => NavigationManager.NavigateTo("/Personal/Settings"))">
                    <Icon IconType="TablerIcons.Settings" class="me-1"/>
                    Settings
                </Button>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                @if (_isMdLoaded)
                {
                    @if (string.IsNullOrEmpty(_userPortFolioMd))
                    {
                        <div class="w-100 d-flex justify-center">
                            <div class="w-100 d-flex flex-column align-items-center">
                                <h3>Looks like you haven't created a portfolio yet!</h3>
                                <div class="d-flex justify-center">
                                    <Button BackgroundColor="TablerColor.Cyan" class="mt-1"
                                            OnClick="@(() => NavigationManager.NavigateTo("/Personal/Portfolio"))">
                                        <Icon IconType="TablerIcons.Plus" class="me-1"/>
                                        Create One
                                    </Button>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        @(new MarkupString(Markdown.ToHtml(_userPortFolioMd, Pipeline)))
                    }
                }
                else
                {
                    <Progress Size="ProgressSize.Small" Indeterminate Color="TablerColor.Secondary"></Progress>
                }
            </div>
        </div>
        <div class="mt-4">
            <div class="d-flex justify-content-between my-2">
                <h2>Your Projects</h2>
                <Button BackgroundColor="TablerColor.White" Size="ButtonSize.Small" class="rounded-2"
                        OnClick="@(() => NavigationManager.NavigateTo("/Personal/Projects/New"))">
                    <Icon IconType="TablerIcons.Plus" class="me-1"/>
                    Add Project
                </Button>
            </div>
            <div class="card">
                <div class="card-body">
                    <div class="w-100 d-flex justify-center">
                        <div class="w-100 d-flex flex-column align-items-center">
                            <h3>Looks like you haven't added any project yet!</h3>
                            <div class="d-flex justify-center">
                                <Button BackgroundColor="TablerColor.Cyan" class="mt-1"
                                        OnClick="@(() => NavigationManager.NavigateTo("/Personal/Projects/New"))">
                                    <Icon IconType="TablerIcons.Plus" class="me-1"/>
                                    Add one
                                </Button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="mt-4">
            <div class="d-flex justify-content-between my-2">
                <h2>Your Blogs</h2>
                <Button BackgroundColor="TablerColor.White" Size="ButtonSize.Small" class="rounded-2"
                        OnClick="@(() => NavigationManager.NavigateTo("/Personal/Blogs/New"))">
                    <Icon IconType="TablerIcons.Plus" class="me-1"/>
                    New Blog
                </Button>
            </div>
            @if (_isBlogsLoaded)
            {
                if (_myLast4Blogs.Count == 0)
                {
                    <div class="card">
                        <div class="card-body">
                            <div class="w-100 d-flex justify-center">
                                <div class="w-100 d-flex flex-column align-items-center">
                                    <h3>Looks like you haven't added any blog yet!</h3>
                                    <div class="d-flex justify-center">
                                        <Button BackgroundColor="TablerColor.Cyan" class="mt-1"
                                                OnClick="@(() => NavigationManager.NavigateTo("/Personal/Blogs/New"))">
                                            <Icon IconType="TablerIcons.Plus" class="me-1"/>
                                            Add one
                                        </Button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="row">
                        @foreach (var blog in _myLast4Blogs)
                        {
                            <div class="col-sm-12 col-md-6 col-lg-3">
                                <a class="card" href="@($"/Blog/{blog.Id}")">
                                    <div class="card-status-top bg-cyan"></div>
                                    <CardHeader>
                                        <CardTitle>@blog.Title</CardTitle>
                                    </CardHeader>
                                    <CardBody>
                                        <h5>@blog.AuthorName</h5>
                                        <p>@blog.CreatedDate.ToShortDateString()</p>
                                    </CardBody>
                                </a>
                            </div>
                        }
                    </div>
                }
            }
            else
            {
                <Progress Size="ProgressSize.Small" Indeterminate Color="TablerColor.Secondary"></Progress>
            }
        </div>
    </ChildContent>
</PageContent>

@code {
    private string _userPortFolioMd;
    private List<Blog> _myLast4Blogs = new();
    private bool _isMdLoaded;
    private bool _isBlogsLoaded;

    private MarkdownPipeline Pipeline => new MarkdownPipelineBuilder().UseAdvancedExtensions().UseEmojiAndSmiley().Build();

    protected override async Task OnInitializedAsync()
    {
        await LoadPortfolio();
        await LoadLatestBlogs();
        await base.OnInitializedAsync();
        _isMdLoaded = true;
        _isBlogsLoaded = true;
    }

    private async Task LoadPortfolio()
    {
        var portfolioResult = await HttpClient.GetFromJsonAsync<Result<string>>("api/manage/portfolio");
        if (portfolioResult!.Succeeded)
        {
            _userPortFolioMd = portfolioResult.Data;
        }
        else
        {
            foreach (var message in portfolioResult.Messages)
            {
                await ToastService.AddToastAsync(new ToastModel("Error", "", message));
            }
        }
    }

    private async Task LoadLatestBlogs()
    {
        var blogsResult = await HttpClient.GetFromJsonAsync<Result<List<Blog>>>("api/blog/my-last-four");
        if (blogsResult!.Succeeded)
        {
            _myLast4Blogs = blogsResult.Data;
        }
        else
        {
            foreach (var message in blogsResult.Messages)
            {
                await ToastService.AddToastAsync(new ToastModel("Error", "", message));
            }
        }
    }

}