@page "/Personal/Blogs/New"
@page "/Personal/Blogs/{Id:guid}"
@using Infinite.Shared.Entities
@using Infinite.Shared.Enums
@using Infinite.Client.Extensions
<PageTitle>Create new blog | @ApplicationConstants.AppName</PageTitle>
<EditForm Model="Model" OnValidSubmit="SubmitAsync">
    <MudToolBar Dense>
        <MudIcon Icon="@Icons.Material.Filled.NoteAdd" Class="mr-2" Size="Size.Large" />
        <MudText Typo="Typo.h4">Create new blog</MudText>
        <div class="d-flex align-center ml-4">
            <MudText Class="mr-2">Blog Visibility</MudText>
            <MudSelect T="Visibility" @bind-Value="@Model.Visibility"
                       Dense Margin="Margin.Dense" Variant="Variant.Outlined">
                <MudSelectItem Value="Visibility.Public">Public</MudSelectItem>
                <MudSelectItem Value="Visibility.Private">Private</MudSelectItem>
                <MudSelectItem Value="Visibility.Unlisted">Unlisted</MudSelectItem>
            </MudSelect>
        </div>
        <MudSpacer/>
        <MudFab StartIcon="@Icons.Material.Filled.Clear" DisableElevation Label="Cancel" />
        <MudFab Class="mx-2" Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.Save" DisableElevation Label="Save to Drafts" />
        <MudFab Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Publish" ButtonType="ButtonType.Submit" DisableElevation Label="Publish" />
    </MudToolBar>
    <MudDivider Light Class="mt-2" />
    <MudGrid Class="pa-4">
        <MudItem xs="12">
            <MudTextField Margin="Margin.Dense" Variant="Variant.Outlined" 
                          @bind-Value="@Model.Title" Label="Blog Title" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField Margin="Margin.Dense" Variant="Variant.Outlined" Lines="10" Immediate
                          @bind-Value="@Model.Markdown" Label="Your Content here (in MarkDown)" />
        </MudItem>
        <MudItem xs="12">
            <MudPaper Class="pa-4" Outlined Elevation="0" Style="overflow: auto">
                <MudMarkdown Value="@Model.Markdown" />
            </MudPaper>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    [Parameter]
    public Guid? Id { get; set; }

    private Blog Model { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        if (Id != Guid.Empty && Id != null)
        {
            var result = await HttpClient.GetFromJsonAsync<Result<Blog>>($"api/blog/{Id}/personal");
            if (result!.Succeeded)
            {
                Model = result.Data;
            }
            else
            {
                foreach (var message in result.Messages)
                {
                    Snackbar.Add(message, Severity.Error);
                }
                NavigationManager.NavigateTo("/Personal");
            }
        }
        await base.OnParametersSetAsync();
    }

    private async Task SubmitAsync()
    {
        var response = await HttpClient.PostAsJsonAsync("api/blog/personal", Model);
        var result = await response.ToResult();
        if (result.Succeeded)
        {
            Snackbar.Add("Create a blog successfully");
        }
        else
        {
            foreach (var message in result.Messages)
            {
                Snackbar.Add(message, Severity.Error);
            }
        }
        NavigationManager.NavigateTo("/Personal");
    }
}