@if (_isLoaded)
{
    <MudPaper Elevation="0" Outlined Class="pa-4">
        @if (string.IsNullOrEmpty(_userPortFolioMd))
        {
            <div class="d-flex justify-center">
                <div class="d-flex flex-column">
                    <MudText Typo="Typo.body1">Looks like you haven't created a portfolio yet!</MudText>
                    <div class="d-flex justify-center">
                        <MudButton Variant="Variant.Filled" Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.Add"
                                   Href="/Personal/Portfolio" DisableElevation Class="mt-2">
                            Create one
                        </MudButton>
                    </div>
                </div>
            </div>
        }
        else
        {
            <MudToolBar Dense>
                <MudSpacer />
                <MudTooltip Text="Edit Portfolio">
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" DisableElevation Href="/Personal/Portfolio" />
                </MudTooltip>
            </MudToolBar>
            <MudMarkdown Value="@_userPortFolioMd" />
        }
    </MudPaper>
}
else
{
    <MudProgressLinear Indeterminate Color="Color.Secondary"/>
}


@code {

    private string _userPortFolioMd;
    private bool _isLoaded;

    protected override async Task OnInitializedAsync()
    {
        var result = await HttpClient.GetFromJsonAsync<Result<string>>("api/manage/portfolio");
        if (result!.Succeeded)
        {
            _userPortFolioMd = result.Data;
        }
        else
        {
            foreach (var message in result.Messages)
            {
                Snackbar.Add(message, Severity.Error);
            }
        }
        await base.OnInitializedAsync();
        _isLoaded = true;
    }
}

